import java.net.MalformedURLException;
import java.net.URL;

import gov.nasa.worldwind.avlist.AVKey;
import gov.nasa.worldwind.avlist.AVList;
import gov.nasa.worldwind.avlist.AVListImpl;
import gov.nasa.worldwind.geom.Angle;
import gov.nasa.worldwind.geom.LatLon;
import gov.nasa.worldwind.layers.mercator.BasicMercatorTiledImageLayer;
import gov.nasa.worldwind.layers.mercator.MercatorSector;
import gov.nasa.worldwind.util.LevelSet;
import gov.nasa.worldwind.util.Tile;
import gov.nasa.worldwind.util.TileUrlBuilder;
import gov.nasa.worldwindx.examples.ApplicationTemplate;
 public class EsriWorldStreetMap extends ApplicationTemplate{

  protected static class EsriWorldStreetMapLayer extends BasicMercatorTiledImageLayer {
    public static final String LAYERNAME = "Esri World Street Map";

    public EsriWorldStreetMapLayer() {
        super(makeLevels());
        this.setName(LAYERNAME);

    }

    private static LevelSet makeLevels() {
        AVList params = new AVListImpl();

        params.setValue(AVKey.TILE_WIDTH, 256);				//瓦片大小256*256
        params.setValue(AVKey.TILE_HEIGHT, 256);
        params.setValue(AVKey.DISPLAY_NAME, LAYERNAME);
        params.setValue(AVKey.NAME, LAYERNAME);
        params.setValue(AVKey.DATA_CACHE_NAME, "Esri/WorldStreetMap");
        params.setValue(AVKey.SERVICE, "http://services.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer");
        params.setValue(AVKey.DATASET_NAME, LAYERNAME);
        params.setValue(AVKey.FORMAT_SUFFIX, ".png");		//瓦片格式
        params.setValue(AVKey.NUM_LEVELS, 16);				//瓦片级数
        params.setValue(AVKey.NUM_EMPTY_LEVELS, 0);		//开始级数
        //params.setValue(AVKey.LEVEL_ZERO_TILE_DELTA, new LatLon(Angle.fromDegrees(45d), Angle.fromDegrees(45d)));//初始瓦片覆盖经纬度大小
        params.setValue(AVKey.LEVEL_ZERO_TILE_DELTA, new LatLon(Angle
            .fromDegrees(22.5d), Angle.fromDegrees(45d)));
        //params.setValue(AVKey.SECTOR, Sector.FULL_SPHERE);	//覆盖范围（全球）
        params.setValue(AVKey.SECTOR, new MercatorSector(-1.0, 1.0, Angle.NEG180, Angle.POS180));
        params.setValue(AVKey.TILE_URL_BUILDER, new URLBuilder());//URL请求

        return new LevelSet(params);
    }
  }
    private static class URLBuilder implements TileUrlBuilder {
        public URL getURL(Tile tile, String imageFormat)
            throws MalformedURLException
        {

            int row =  (1 << (tile.getLevelNumber()) + 3) - 1 - tile.getRow();
            int col = tile.getColumn();
            int level = tile.getLevelNumber()+3;
            String serverURL = tile.getLevel().getService();
            //tile URL
            String fullurl = serverURL + "/tile/" + level + "/" + row + "/" + col;


            //System.out.println("fullurl:"+fullurl);
            return new URL(fullurl);
        }
    }
    
    
    public static class AppFrame extends ApplicationTemplate.AppFrame{  
   
        /**
		 * 
		 */
		private static final long serialVersionUID = 1L;
		public AppFrame(){  
            try {   
            	EsriWorldStreetMapLayer esriWorldStreetMapLayer = new EsriWorldStreetMapLayer();
                getWwd().getModel().getLayers().add(esriWorldStreetMapLayer);  
            } 
            catch (Exception e) {  
                e.printStackTrace();  
            }  
        }  
    }
    
    public static void main(String[] args) {  
        ApplicationTemplate.start("WMS图层",AppFrame.class);  
    } 
}
